################################################################
## Ragged Jack Farm                                           ##
## Package: Power Monitor                                     ##
## Author: David Durost <david.durost@gmail.com>              ##
## Url: http://ragedjackfarm.net                              ##
################################################################
homeassistant:
  customize:
      package.node_anchors:
        customize: &customize
          package: 'power_monitor'

################################################################
# Automation                                                   #
################################################################
automation:
  # Periodic System Status Notification
  - alias: 'System Status - Periodic'
    trigger:
      - platform: time_pattern 
        minutes: '/10'
    action:
      - service: notify.david
        data: 
          message: >-
            {% set mode = states('sensor.magnum_inverter_mode_text') %}
            {% set mode = "{}: {}".format(mode, states('sensor.magnum_inverter_mode')) if mode == 'Resting' else mode %}
            {% set soc = states('sensor.magnum_bmk_soc') %}
            {% set vdc = states('sensor.magnum_bmk_vdc') %}
            {% set acout = states('sensor.magnum_inverter_aacout') %}
            [RaggedPi] [{{mode}}][SOC: {{soc}}%][{{vdc}}V][AC load: {{acout}}A]
      - condition: and
        conditions:
          - condition: numeric_state
            entity_id: sun.sun
            value_template: "{{ state_attr('sun.sun', 'elevation') }}"
            above: 1.5
      - service: notify.david
        data: 
          message: >-
            {% set mode = states('sensor.classic_mode') %}
            {% set mode = "{}: {}".format(mode, states('sensor.magnum_inverter_mode')) if mode == 'Resting' else mode %}
            {% set vdc = states('sensor.classic_avg_pv_voltage') %}
            {% set adc = states('sensor.classic_avg_pv_current') %}
            {% set energy = states('sensor.classic_avg_energy_today') %}
            [{{mode}}][PV Input: {{vdc}}V][{{adc}}Adc[Total Input: {{energy}}KW]
      - condition: and
        conditions:
          - condition: state
            entity_id: input_boolean.magnum_aux_ac_input
            state: 'On'
      - service: notify.david
        data:
          message: >
            [Aux Generator: ON][{{ states('timer.magnum_charge_time') }}s]

  # Turn Off Aux. Generator Notification
  - alias: 'System nearly full'
    trigger:
      - platform: numeric_state
        entity_id: sensor.magnum_bmk_soc
        above: 98
        below: 100
        for:
          minutes: 3
    action:
      - service: notify.david
        data:
          message: "[RaggedPi] System nearing full."
      - condition: and
        conditions:      
          - condition: template
            value_template: "{{ states('sensor.magnum_inverter_aacin')|int > 0 }}"
      - service: notify.david
        data:
          message: "[RaggedPi] Disengage the aux generator."
  
  # Turn On Aux. Generator Notification
  - alias: 'System low'
    trigger:
      - platform: numeric_state
        entity_id: sensor.magnum_bmk_soc
        below: 90
        above: 80
        for:
          minutes: 3
    action:
      - service: notify.david
        data:
          message: "[RaggedPi] System getting low."
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ states('sensor.magnum_inverter_aacin')|int > 0 }}"
      - service: notify.david
        data:
          message: "Engage the aux generator."


