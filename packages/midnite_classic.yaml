################################################################
## Ragged Jack Farm                                           ##
## Package: MidniteClassic                                    ##
## Author: David Durost <david.durost@gmail.com>              ##
## Url: http://ragedjackfarm.net                              ##
################################################################
homeassistant:
  customize:
    sensor.classic_model:
      friendly_name: 'Model'
    sensor.classic_last_voc:
      friendly_name: 'last VOC'
    sensor.classic_nom_battery_voltage:
      friendly_name: 'Nominal Battery Voltage'
    sensor.classic_mppt_mode:
      friendly_name: 'MPPT Mode'
    sensor.classic_battery_voltage:
      friendly_name: 'Battery Voltage'
    sensor.classic_pv_voltage:
      friendly_name: 'PV Voltage'
    sensor.classic_battery_current:
      friendly_name: 'Battery Current'
    sensor.classic_power:
      friendly_name: 'Power'
    sensor.classic_energy_today:
      friendly_name: 'Energy Today'
    sensor.classic_charge_state:
      friendly_name: 'Charge State'
    sensor.classic_pv_current:
      friendly_name: 'PV Current'
    sensor.classic_total_energy:
      friendly_name: 'Total Energy'
    sensor.classic_battery_Temp:
      friendly_name: 'Battery Temperature'
    sensor.classic_fet_temp:
      friendly_name: 'FET Temperature'
    sensor.classic_pcb_temp:
      friendly_name: 'PCB Temperature'
    sensor.classic_float_time_today:
      friendly_name: 'Float Time Today'
    sensor.classic_absorb_time:
      friendly_name: 'Absorb Time'
    sensor.classic_equalize_time:
      friendly_name: 'EQ Time'
    sensor.classic_reason_for_rest:
      friendly_name: 'Rest Reason'
    sensor.classic_rest_reason:
      friendly_name: 'Rest Reason Code'
    sensor.classic_soc:
      friendly_name: 'State of Charge'
    sensor.classic_charge_stage:
      friendly_name: 'Charge Stage'
    sensor.classic_pcb:
      friendly_name: 'PCB Revision'
    sensor.classic_total_ah_daily:
      friendly_name: "Daily Total Ah"
    sensor.classic_battery_capacity:
      friendly_name: 'Battery Capacity'
    package.node_anchors:
        customize: &customize
          package: 'midnite_classic'
  customize_glob:
    "sensor.classic_*":
      icon: mdi:solar-power
    "sensor.classic_rev_*":
      hidden: true

sensor:
  #########
  # Infos #
  #########
  # App Version
  - name: classic_appversion
    platform: mqtt
    state_topic: "classic/stats/info"
    value_template: "{{ value_json.appVersion }}"
    json_attributes_topic: "classic/stats/info"
    json_attributes_template: "{{ value_json.appVersion | tojson }}" 
  # Unit Model
  - name: classic_model
    platform: mqtt
    state_topic: "classic/stats/info"
    value_template: "{{ value_json.model }}"
    json_attributes_topic: "classic/stats/info"
    json_attributes_template: "{{ value_json.model | tojson }}" 
  # Revision Date
  - name: classic_build_date
    platform: mqtt
    state_topic: "classic/stats/info"
    value_template: "{{ value_json.buildDate }}"
    json_attributes_topic: "classic/stats/info"
    json_attributes_template: "{{ value_json.buildDate | tojson }}" 
  # Nominal battery voltage
  - name: classic_nom_battery_voltage
    platform: mqtt
    state_topic: "classic/stats/info"
    value_template: "{{ value_json.nominalBatteryVoltage }}"
    json_attributes_topic: "classic/stats/info"
    json_attributes_template: "{{ value_json.nominalBatteryVoltage | tojson }}" 
    unit_of_measurement: V
  # Last VOC
  - name: classic_last_voc
    platform: mqtt
    state_topic: "classic/stats/info"
    value_template: "{{ value_json.lastVOC }}"
    json_attributes_topic: "classic/stats/info"
    json_attributes_template: "{{ value_json.lastVOC | tojson }}" 
    unit_of_measurement: V
  # MPPT mode
  - name: classic_mppt_mode
    platform: mqtt
    state_topic: "classic/stats/info"
    value_template: "{{ value_json.mpptMode }}"
    json_attributes_topic: "classic/stats/info"
    json_attributes_template: "{{ value_json.mpptMode | tojson }}" 
  ############
  # Readings #
  ############
  # Battery Voltage
  - name: classic_battery_voltage
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.BatVoltage }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.BatVoltage | tojson }}" 
    unit_of_measurement: V
    # Total Daily Ah
  - name: classic_total_ah_daily
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.TotalAmpHours }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.TotalAmpHours | tojson }}" 
    unit_of_measurement: Ah
  # State Of Charge
  - name: classic_soc
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.SOC }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.SOC | tojson }}" 
    unit_of_measurement: '%'
  # Resting Reason
  - name: classic_reason_for_resting
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.ReasonForResting }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.ReasonForResting | tojson }}" 
  # PV voltage
  - name: classic_pv_voltage
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.PVVoltage }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.PVVoltage | tojson }}" 
    unit_of_measurement: V
  # Battery Current
  - name: classic_battery_current
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.BatCurrent }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.BatCurrent | tojson }}" 
    unit_of_measurement: A
  # Power
  - name: classic_power
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.Power }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.Power | tojson }}" 
    unit_of_measurement: W
  # Total Energy
  - name: classic_total_energy
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.TotalEnergy }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.TotalEnergy | tojson }}" 
    unit_of_measurement: J
  # Charge State
  - name: classic_charge_state
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.ChargeState }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.ChargeState | tojson }}" 
  # PV Current
  - name: classic_pv_current
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.PVCurrent }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.PVCurrent | tojson }}" 
    unit_of_measurement: A
    # Battery temperature
  - name: classic_battery_temp_c
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.BatTemperature }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.BatTemperature | tojson }}" 
    unit_of_measurement: C
  # FET temperature
  - name: classic_fet_temp_c
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.FETTemperature }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.FETTemperature | tojson }}" 
    unit_of_measurement: C
  # PCB temperature
  - name: classic_pcb_temp_c
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.PCBTemperature }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.PCBTemperature | tojson }}" 
    unit_of_measurement: C
  # Float time today
  - name: classic_float_time_today
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.FloatTimeTodaySeconds }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.FloatTimeTodaySeconds | tojson }}" 
    unit_of_measurement: S
  # Absorb time
  - name: classic_absorb_time
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.AbsorbTime }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.AbsorbTime | tojson }}" 
    unit_of_measurement: S
  # Equalize time
  - name: classic_equalize_time
    platform: mqtt
    state_topic: "classic/stats/readings"
    value_template: "{{ value_json.EqualizeTime }}"
    json_attributes_topic: "classic/stats/readings"
    json_attributes_template: "{{ value_json.EqualizeTime | tojson }}" 
    unit_of_measurement: S
    
  # Template Sensors
  - platform: template
    sensors:
      # Reason For Rest
      classic_rest_reason_text:
        friendly_name: 'Rest Reason'
        entity_id: sensor.classic_rest_reason
        value_template: >-
          {% set rest = states('sensor.classic_reason_for_resting')|int %}
          {% if rest == 1 %}
            Anti-Click
          {% elif rest == 2 %}
            Insane Battery Measurement
          {% elif rest == 3 %}
            Negative Current
          {% elif rest == 4 %}
            PV Input Below Battery Vvoltage
          {% elif rest == 5 %}
            Battery Full Or No Draw
          {% elif rest == 6 %}
            FET Overheat
          {% elif rest == 7 %}
            Ground Fault
          {% elif rest == 8 %}
            Arc Fault
          {% elif rest == 9 %}
            Battery Backfeed To PV
          {% elif rest == 10 %}
            Battery Below 8V
          {% elif rest in [11, 14] %}
            Low Light
          {% elif rest in [12, 15] %}
            Low Light Recheck (Drop)
          {% elif rest == 13 %}
            Low Light Recheck (Rise)
          {% elif rest == 16 %}
            MPPT Off
          {% elif rest in [17, 18, 19] %}
            PV Input Too High
          {% elif rest == 22 %}
            Avg Battery Voltage Too High
          {% elif rest == 25 %}
            Battery Voltae Above Overshoot
          {% elif rest == 26 %}
            MPPT Mode Changed
          {% elif rest == 27 %}
            Bridge Center
          {% elif rest == 28 %}
            Relay Not Enagaged
          {% elif rest == 29 %}
            Bad Wind Graph
          {% else %}
          Reason Code: {{rest}}
          {% endif %}
      
      # Temperature Conversions
      classic_battery_temp:
        friendly_name: 'Battery Temperature'
        value_template: "{{ ((state('sensor.classic_battery_temp_c')|float(2) * 9) /5) + 32 }}"
        unit_of_measurement: F

      classic_pcb_temp:
        friendly_name: PCB Temperature
        value_template: >-
          {{ ((state('sensor.classic_pcb_temp_c')|int) *9 /5) + 32 }}
        unit_of_measurement: F

      classic_fet_temp:
        friendly_name: FET Temperature
        value_template: "{{ ((state('sensor.classic_fet_temp_c')|int) *9 /5) + 32 }}"
        unit_of_measurement: F

      classic_mode:
        friendly_name: Mode
        value_template: >-
          {% set mode = states('sensor.classic_charge_state')|int %}
          {% if mode == 0 %}
            Resting
          {% elif mode == 3 %} 
            Absorb
          {% elif mode == 4 %}
            Bulk
          {% elif mode == 5 %}
            Float
          {% elif mode == 6 %}
            Float MPPT
          {% elif mode == 7 %}
            EQ
          {% elif mode == 10 %}
            Hyper VOC
          {% elif mode == 18 %}
            EQ MPPT
          {% else %}
            Unknown
          {% endif %}
          
      classic_mode_time:
        friendly_name: Time
        value_template: >-
          {% set mode = states('sensor.classic_charge_state')|int %}
          {% if mode == 0 %} # we are resting
            {{ sensor.classic_reason_for_rest }}
          {% elif mode == 3 %} 
            {{ sensor.classic_absorb_time }}
          {% elif mode == 4 %}
            ''
          {% elif mode == 5 %}
            {{ sensor.classic_float_time_today }}
          {% elif mode == 6 %}
            {{ sensor.classic_float_time_today }}
          {% elif mode == 7 %}
            {{ sensor.classic_equalize_time }}
          {% elif mode == 10 %}
            ''
          {% elif mode == 18 %}
            {{ sensor.classic_equalize_time }}
          {% else %}
            ''
          {% endif %}
# # Entity Groups
# group:
#   classic_stats:
#     name: 'Midnite Classic'
#     entities:
#       - sensor.classic_absord_time
#       - sensor.classic_battery_current
#       - sensor.classic_battery_temp
#       - sensor.classic_battery_capacity
#       - sensor.classic_charge_stage
#       - sensor.classic_charge_state
#       - sensor.classic_device_id
#       - sensor.classic_pv_voltage
#       - sensor.classic_battery_voltae
#       - sensor.classic_energy_today
#       - sensor.classic_equalize_time
#       - sensor.classic_fet_temp
#       - sensor.classic_float_time_today
#       - sensor.classic_mac_address
#       - sensor.classic_model
#       - sensor.classic_pcb
#       - sensor.classic_pcb_temp
#       - sensor.classic_power
#       - sensor.classic_pv_current
#       - sensor.classic_reason_for_rest
#       - sensor.classic_rest_reason
#       - sensor.classic_revision_date
#       - sensor.classic_soc
#       - sensor.classic_total_ah_daily
#       - sensor.classic_total_energy
#   classic_volts:
#     name: 'Midnite Classic Voltages'
#     entities:
#       - sensor.classic_last_voc
#       - sensor.classic_pv_voltage
#       - sensor.classic_battery_voltage
#       - sensor.classic_nom_battery_voltage
#   classic_currents:
#     name: 'Midnite Classic Currents'
#     entities:
#       - sensor.classic_battery_capacity
#       - sensor.classic_battery_current
#       - sensor.classic_pv_current
#       - sensor.classic_total_ah_daily
#   classic_powers:
#     name: 'Midnite Classic Power'
#     entities:
#       - sensor.classic_power
#       - sensor.classic_pv_power
#       - sensor.classic_energy_today
#       - sensor.classic_total_energy